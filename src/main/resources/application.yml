spring:
  profiles:
    group:
      dev:
        - dev
        - commons
      prod:
        - prod
        - commons

--- # 공통 사용
server:
  servlet:
    session:
      timeout: ${REDIS_TIMEOUT}
spring:
  application:
    name: app1
  config:
    activate:
      on-profile: commons
# 메일 설정
  mail:
    host: ${EMAIL_HOST}
    port: ${EMAIL_PORT}
    username: ${EMAIL_USERNAME}
    password: ${EMAIL_PASSWORD}
    properties:
      mail:
        smtp:
          auth: ${EMAIL_SMTP_AUTH}
          timeout: ${EMAIL_SMTP_TIMEOUT}
          starttls: 
            enable: ${EMAIL_SMTP_ENABLE}
# database 설정
  datasource:
    driver-class-name: ${DB_DRIVER}
    url: ${DB_URL}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
# Redis 설정
  data:
    redis:
      host: ${REDIS_HOST}
      port: ${REDIS_PORT}
      password: ${REDIS_PASSWORD}
      timeout: ${REDIS_TIMEOUT}
# Spring Session 설정
  session:
#    store-type: redis
    redis:
      repository-type: default
      flush-mode: immediate
      namespace: ${REDIS_NAMESPACE}
# file size 설정
  servlet:
    multipart:
      max-file-size: 100MB
      max-request-size: 100MB

--- # 개발 시 사용
server:
  port: 8001
spring:
# ENV 설정
  config:
    import: optional:file:.env[.properties]
    activate:
      on-profile: dev
# log level 설정
logging:
  level:
    org:
      springframework:
        web: INFO
      thymeleaf: INFO

--- # 배포 시 사용
server:
  port: 8080
spring:
# ENV 설정
  config:
    activate:
      on-profile: prod
# log level 설정
logging:
  level:
    org:
      springframework:
        web: WARN
      thymeleaf: WARN